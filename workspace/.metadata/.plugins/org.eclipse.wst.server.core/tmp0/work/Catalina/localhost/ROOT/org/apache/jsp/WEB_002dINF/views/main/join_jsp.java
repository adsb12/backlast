/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-26 02:38:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/F:/eclipse-kjh/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Spring_Project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1626850000838L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<title>JSP 게시판</title>\r\n");
      out.write("<meta http-equiv=\"Conetent-Type\" content = \"text/html; charset = UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content = \"width=device-width\" initial-scale = \"1\">\r\n");
      out.write("<link rel = \"stylesheet\" href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.css\" >\r\n");
      out.write("<link rel = \"stylesheet\" href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/custom.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("<script src= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"//ajax.googleapis.com/ajax/libs/jquery.min.js\" charset = \"UTF-8\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/address.js\" charset = \"UTF-8\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/join.js\" charset=\"UTF-8\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--  nav : 네비게이션 리스트 만들어주는 HTML 태그 -->\r\n");
      out.write("<nav class=\"navbar navbar-default\">\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<!-- div : 웹 페이지에서 공간을 지정하는 HTML 태그 (가로 전체) -->\r\n");
      out.write("		<div class = \"navbar-header\">\r\n");
      out.write("				<!--button : 버튼을 만들어 주는 HTML 태그 -->\r\n");
      out.write("				<button type = \"button\" class = \"navbar-toggle collapsed\"\r\n");
      out.write("				 	data-toggle = \"collapse\" data-target = \"#bs-navbar-collapse\"\r\n");
      out.write("				 	arai-expaned = \"false\">\r\n");
      out.write("				 	<!-- span :  웹 페이지에서 공간을 지정하는 HTML 태그 (컨텐츠 사이즈 가로)-->\r\n");
      out.write("				 	<span class = \"icon-bar\"></span>\r\n");
      out.write("				 	<span class = \"icon-bar\"></span>\r\n");
      out.write("				 	<span class = \"icon-bar\"></span>\r\n");
      out.write("				 </button>\r\n");
      out.write("				 <!--  a : url을 이동 시켜주는 태그 href = \"\" 속성에 경로 지정 -->\r\n");
      out.write("				 <a class = \"navbar-brand\" href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">JSP 게시판</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id = \"bs-navbar-collapse\">\r\n");
      out.write("				<!-- \r\n");
      out.write("					ol : order list -- 순서가 있는 리스트를 만들어 주는 태그\r\n");
      out.write("					ul : unorder list -순서가 없는 리스트를 만들어 주는 태그\r\n");
      out.write("				 -->\r\n");
      out.write("				 \r\n");
      out.write("				 ");
      out.write("\r\n");
      out.write("				<ul class = \"nav navbar-nav\">\r\n");
      out.write("						<!-- li : 리스트는 하나의 요소를 만들어 주는 태그 -->\r\n");
      out.write("						<li class=\"active\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">메인</a></li>\r\n");
      out.write("						<li><a href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/bbs\">게시판</a></li>	\r\n");
      out.write("				</ul>\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				<!-- 로그인이 되있지 않을 때 표시 -->\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				\r\n");
      out.write("		</div>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class = \"container\">\r\n");
      out.write("		<div class = \"col-lg-3\"></div>\r\n");
      out.write("		\r\n");
      out.write("		<div class = \"col-lg-6\">\r\n");
      out.write("				<div class = \"jumbotron\" ><!-- jumbotron : 이 클래스 때문에 앞, 뒤 공간이 비어있는 것. -->\r\n");
      out.write("						<form method = \"POST\" action = \"./joinAction\"> <!-- @WebServlet(\"/join\")이랑 동일 해야한다. -->\r\n");
      out.write("								<h3 style = \"text-align : center;\">회원가입</h3>	\r\n");
      out.write("								<!-- \r\n");
      out.write("									(아이디 중복 확인 칸) 1. table 이용, 2. div로 공간배정 \r\n");
      out.write("									bs : <-- 는 부트스트랩 설명\r\n");
      out.write("									class는 띄워쓰기로 여러개의 속성 적용가능. 중복이 되면 맨 마지막 class에 속성을 적용\r\n");
      out.write("								-->\r\n");
      out.write("								\r\n");
      out.write("								<!--  아이디 입력에 대한 공간 할당 -->\r\n");
      out.write("								<!-- bs : row - 공간을 12개로 분할 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("										<!-- 아이디 입력 --><!-- ↓ 사이즈가 어떻게 되던간에 12중 9개의 공간을 차지해라 라는 뜻이다. -->\r\n");
      out.write("										<div class =\"form-group col-sm-9 col-md-9 col-lg-9\">\r\n");
      out.write("												<input type = \"text\" id = \"user_id\" class = \"form-control\" name = \"user_id\" placeholder = \"아이디\">\r\n");
      out.write("										</div><!-- placeholder : 기본으로 폼에 입력되어 있는값(클릭시 사라진다, 폼에 입력값 설명시 사용)  ↑ -->\r\n");
      out.write("										\r\n");
      out.write("										<div class = \"form-group col-sm-3 col-md-3 col-lg-3\">\r\n");
      out.write("												<button type = \"button\" class = \"btn btn-success btn-block\" id = \"id_check\">중복체크</button>\r\n");
      out.write("										</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 비밀번호 입력에 대한 공간 할당 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("									<!-- 비밀번호 입력 -->\r\n");
      out.write("									<div class =\"form-group col-sm-12 col-md-12 col-lg-12\">\r\n");
      out.write("											<input type = \"password\" class = \"form-control\" id = \"user_pw\" name = \"user_pw\" placeholder = \"비밀번호\">\r\n");
      out.write("									</div>		\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 비밀번호 확인에 대한 공간 할당 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("									<!-- 비밀번호 입력 -->\r\n");
      out.write("									<div class =\"form-group col-sm-12 col-md-12 col-lg-12\">\r\n");
      out.write("											<input type = \"password\" class = \"form-control\" id = \"user_pw2\" name = \"user_pw2\" placeholder = \"비밀번호 확인\">\r\n");
      out.write("									</div>		\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 비밀번호 체크에 대한 공간 할당 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("										<div class = \"form-group col-sm12 col-md-12 col-lg-12\">\r\n");
      out.write("												<h6 id = \"diff_pw\" class = \"text-danger\" style = \"display: none\">비밀번호가 서로 다릅니다.</h6>\r\n");
      out.write("												<h6 id = \"equal_pw\" class = \"text-success\" style = \"display: none\">확인되었습니다.</h6>\r\n");
      out.write("										</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 이름 입력에 대한 공간 할당 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("										<!--  이름 입력 -->\r\n");
      out.write("										<div class = \"form-group cols-sm12 col-md-12 col-lg-12\">\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" name = \"user_name\" placeholder = \"이름\">\r\n");
      out.write("										</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 성별 선택에 대한 공간 할당 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("									<!-- 성별 선택 -->\r\n");
      out.write("									<div class =\"form-group\" style = \" text-align : center;\">\r\n");
      out.write("										<div class = \"btn-group\" data-toggle = \"buttons\">\r\n");
      out.write("												\r\n");
      out.write("												<!-- label : UI 요소에 라벨을 정의하는 HTML 태그 -->\r\n");
      out.write("												<label class = \"btn btn-primary\">\r\n");
      out.write("														<!-- autocomplete 속성 : 과거 기록을 dropdown 형식으로 보여줄지를 선택 - true : 보여줌, false : 보여주지 않음-->\r\n");
      out.write("														<input type = \"radio\" name = \"user_gender\" autocomplete = \"off\" value = \"m\">남자\r\n");
      out.write("												</label>\r\n");
      out.write("												<label class = \"btn btn-primary\">\r\n");
      out.write("														<input type = \"radio\" name = \"user_gender\" autocomplete = \"off\" value = \"w\">여자\r\n");
      out.write("												</label>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>		\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 이메일 입력에 대한 공간 할당 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("											<!-- 이메일 입력 -->\r\n");
      out.write("											<div class = \"form-group col-sm-9 col-md-9 col-lg-9\">\r\n");
      out.write("													<input type = \"email\" class = \"form-control\" id=\"user_email\" name = \"user_email\" placeholder = \"이메일\" readonly>\r\n");
      out.write("											</div>\r\n");
      out.write("											<div class = \"form-group col-sm-3 col-md-3 col-lg-3\"><!-- ↓ btn-block : 할당 공간을 꽉 채우기 -->\r\n");
      out.write("													<button type = \"button\" class = \"btn btn-success btn-block\" \r\n");
      out.write("																	data-toggle = \"modal\" data-target = \"#emailAuthModal\">인증</button>\r\n");
      out.write("													  				<!-- Modal : 부트스트랩에서 지원하는 팝업창 -->\r\n");
      out.write("											</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<!-- 주소 입력에 대한 공간 할당 -->\r\n");
      out.write("								<!-- \r\n");
      out.write("										ㆍ주소 name\r\n");
      out.write("										- 우편번호		: addr1\r\n");
      out.write("										- 주	   소	: addr2\r\n");
      out.write("										- 상세주소		: addr3\r\n");
      out.write("								 -->\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("										<!-- 우편번호 -->\r\n");
      out.write("										<div class = \"form-group col-sm-3 col-md-3 col-lg-3\">\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" id = \"addr1\" name = \"addr1\" placeholder = \"우편번호\" readonly >\r\n");
      out.write("										</div>\r\n");
      out.write("									\r\n");
      out.write("										<div class = \"form-group col-sm-3 col-md-3 col-lg-3\">\r\n");
      out.write("												<button type = \"button\" class = \"btn btn-success btn-block\"\r\n");
      out.write("												data-toggle = \"modal\" data-target = \"#addrModal\">주소검색</button>\r\n");
      out.write("										</div>\r\n");
      out.write("										\r\n");
      out.write("										<!-- 주소 -->\r\n");
      out.write("										<div class = \"form-group cols-sm12 col-md-12 col-lg-12\">\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" id = \"addr2\" name = \"addr2\" placeholder = \"주소\" readonly>\r\n");
      out.write("										</div>\r\n");
      out.write("										\r\n");
      out.write("										<!-- 상세 주소 -->\r\n");
      out.write("										<div class = \"form-group cols-sm12 col-md-12 col-lg-12\">\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" id= \"addr3\" name = \"addr3\" placeholder = \"상세 주소\">\r\n");
      out.write("										</div>\r\n");
      out.write("								</div>\r\n");
      out.write("						\r\n");
      out.write("								<!-- 제출 버튼 -->\r\n");
      out.write("								<div class =\"form-group\">\r\n");
      out.write("									<input type = \"submit\" class = \"btn btn-primary form-control\" value = \"회원가입\">\r\n");
      out.write("								</div>					\r\n");
      out.write("						</form>\r\n");
      out.write("				</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class = \"col-lg-3\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id = \"emailAuthModal\" class = \"modal fade\" role = \"dialog\">\r\n");
      out.write("		<div class = \"modal-dialog\">\r\n");
      out.write("				<div class = \"modal-content\">\r\n");
      out.write("						<div class = \"modal-header\">														 <!-- &times; : 부트스트랩 x 아이콘 만들기 -->\r\n");
      out.write("								<button type = \"button\" class = \"close\" data-dismiss = \"modal\">&times;</button>\r\n");
      out.write("								<h4 class = \"modal-title\">이메일 인증</h4>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class = \"modal-body\">\r\n");
      out.write("								<div class = \"row\">\r\n");
      out.write("										<div class = \"col-lg-8\">\r\n");
      out.write("												<input type = \"email\" class = \"form-control\" id = \"user_mail_modal\" placeholder = \"이메일\">\r\n");
      out.write("										</div>\r\n");
      out.write("								\r\n");
      out.write("										<div class = \"col-lg-4\">\r\n");
      out.write("												<button type = \"button\" class = \"btn btn-success btn-block\" id = \"sendAuthBtn\">인증번호 전송</button>\r\n");
      out.write("										</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								\r\n");
      out.write("								<div class = \"row\" id = \"authDiv\" style = \"margin-top : 15px; display : none;\">\r\n");
      out.write("										<div class = \"col-lg-4\">\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" id=\"auth_num\" placeholder = \"인증번호\">\r\n");
      out.write("										</div>\r\n");
      out.write("								\r\n");
      out.write("										<div class = \"col-lg-4\">\r\n");
      out.write("												<button type = \"button\" class = \"btn btn-primary btn-block\" id=\"authMailBtn\">인증</button>\r\n");
      out.write("										</div>\r\n");
      out.write("										\r\n");
      out.write("										<div class = \"col-lg-4\">\r\n");
      out.write("\r\n");
      out.write("										</div>\r\n");
      out.write("								</div>\r\n");
      out.write("						</div>\r\n");
      out.write("				</div>\r\n");
      out.write("		</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id = \"addrModal\" class = \"modal fade\" role = \"dialog\">\r\n");
      out.write("		<div class = \"modal-dialog\">\r\n");
      out.write("				<div class = modal-content>\r\n");
      out.write("						<div class = \"modal-header\">\r\n");
      out.write("								<button type = \"button\" class = \"close\" data-dismiss = \"modal\">&times;</button>\r\n");
      out.write("								<h4 class = \"modal-title\">주소 검색</h4>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class = \"modal-body\">\r\n");
      out.write("								<div class = \"row\" id = \"postcodify\">\r\n");
      out.write("								<script>\r\n");
      out.write("										$('#postcodify').postcodify({\r\n");
      out.write("												insertPostcode5 	: '#entry_postcode5',\r\n");
      out.write("												insertAddress		: '#entry_address',\r\n");
      out.write("												insertExtraInfo		: '#entry_extra_info',\r\n");
      out.write("												userFullJibeon		: true,\r\n");
      out.write("												mapLinkProvider	: 'google',\r\n");
      out.write("												\r\n");
      out.write("												ready : function() {\r\n");
      out.write("													$('#postcodify div.postcode_search_status.empty').hide();\r\n");
      out.write("												},\r\n");
      out.write("												\r\n");
      out.write("												beforeSearch 	: function() {\r\n");
      out.write("													$('#entry_box').hide();\r\n");
      out.write("												},\r\n");
      out.write("												\r\n");
      out.write("												afterSearch 		: function(selectedEntry) {\r\n");
      out.write("													$('#postcodify div.postcode_search_result').remove();\r\n");
      out.write("													$('#postcodify div.postcode_search_status.summary').hide();\r\n");
      out.write("													$('#entry_box').show();\r\n");
      out.write("													$('#entry_details').focus();\r\n");
      out.write("												}\r\n");
      out.write("												\r\n");
      out.write("										});\r\n");
      out.write("								</script>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div>\r\n");
      out.write("										<p>\r\n");
      out.write("												<label for = \"entry_postcode5\">우편번호</label>\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" id = \"entry_postcode5\" readonly>\r\n");
      out.write("										</p>\r\n");
      out.write("										<p>\r\n");
      out.write("												<label for = \"entry_address\">도로명주소</label>\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" id = \"entry_address\" readonly>\r\n");
      out.write("										</p>\r\n");
      out.write("										<p>\r\n");
      out.write("												<label for = \"entry_extra_info\">지명주소</label>\r\n");
      out.write("												<input type = \"text\" class = \"form-control\" id = \"entry_extra_info\" readonly>\r\n");
      out.write("										</p>\r\n");
      out.write("								</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class = \"modal-footer\">\r\n");
      out.write("								<button type = \"button\" id = \"getAddrBtn\" class = \"btn btn-primary\" data-dismiss = \"modal\">확인</button>\r\n");
      out.write("						</div>\r\n");
      out.write("				</div>\r\n");
      out.write("		</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("		var msg = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		if(msg != null && msg != '') alert(msg);\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/main/join.jsp(61,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty user_id }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<ul class = \"nav navbar-nav navbar-right\">\r\n");
          out.write("						<li class = \"dropdown\">\r\n");
          out.write("								<a href = \"#\" class = \"dropdown-toggle\"\r\n");
          out.write("										data-toggle = \"dropdown\" role=\"button\"\r\n");
          out.write("										aria-haspopup=\"true\" aria-expanded = \"false \">\r\n");
          out.write("										 마이페이지<span class = \"caret\"></span>							\r\n");
          out.write("								</a>\r\n");
          out.write("								<ul class = \"dropdown-menu\">\r\n");
          out.write("										<li><a href = \"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/login\">로그인</a></li>\r\n");
          out.write("										<li><a href = \"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/join\">회원가입</a></li>\r\n");
          out.write("								</ul>\r\n");
          out.write("						</li>\r\n");
          out.write("				</ul>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/main/join.jsp(76,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user_id }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				 <!-- 로그인이 되었을 때 표시 -->\r\n");
          out.write("				<ul class = \"nav navbar-nav navbar-right\">\r\n");
          out.write("						<li class = \"dropdown\">\r\n");
          out.write("								<a href = \"#\" class = \"dropdown-toggle\"\r\n");
          out.write("										data-toggle = \"dropdown\" role=\"button\"\r\n");
          out.write("										aria-haspopup=\"true\" aria-expanded = \"false \">\r\n");
          out.write("										 마이페이지<span class = \"caret\"></span>							\r\n");
          out.write("								</a>\r\n");
          out.write("								<ul class = \"dropdown-menu\">\r\n");
          out.write("										<li><a href = \"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/logout\">로그아웃</a></li>\r\n");
          out.write("								</ul>\r\n");
          out.write("						</li>\r\n");
          out.write("				</ul>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
